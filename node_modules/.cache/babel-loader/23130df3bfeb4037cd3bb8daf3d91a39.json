{"ast":null,"code":"import _classCallCheck from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/src/components/rating.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: theme.spacing.unit,\n      color: \"#2196f3\"\n    }\n  };\n};\n\nvar Rating =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rating, _Component);\n\n  function Rating(props) {\n    var _this;\n\n    _classCallCheck(this, Rating);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rating).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.selectedRating === \"\") {\n        console.log(\"ei arviointia\");\n\n        _this.setState({\n          infoMessage: \"Valitse kurssille arvio asteikolla 1-5.\"\n        });\n\n        return;\n      }\n\n      console.log(\"annettu arviointi: \" + _this.state.selectedRating); //construct a json object which will be sent to the server\n\n      var data = {\n        rating: _this.state.selectedRating.toString()\n      };\n      axios.post(\"/api/course/\" + _this.props.courseId + \"/rating\", data).then(function () {\n        _this.setState({\n          infoMessage: \"Arvostelu tallennettu.\"\n        });\n\n        _this.props.updateFunction();\n      });\n    };\n\n    _this.clearRating = function () {\n      for (var i = 1; i <= 5; i++) {\n        var element = document.getElementById(i + \"-rating\");\n        element.classList.remove(\"checked\");\n      }\n\n      _this.setState({\n        selectedRating: \"\"\n      });\n    };\n\n    _this.handleOptionChange = function (rating) {\n      //when user gives a rating, make the stars orange up to the rated value\n      for (var i = rating; i >= 1; i--) {\n        var element = document.getElementById(i + \"-rating\");\n        element.classList.add(\"checked\");\n      } //and if there was orange stars beyond the given rate, make them black again\n\n\n      for (var _i = rating + 1; _i <= 5; _i++) {\n        var _element = document.getElementById(_i + \"-rating\");\n\n        _element.classList.remove(\"checked\");\n      } //update the state so we can send the given rate to api when user wants to\n\n\n      _this.setState({\n        selectedRating: rating\n      });\n    };\n\n    _this.state = {\n      selectedRating: \"\",\n      infoMessage: \"\"\n    };\n    return _this;\n  } //if the user navigates to a new course, clear the previous rating\n\n\n  _createClass(Rating, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.courseId !== prevProps.courseId) {\n        this.clearRating();\n      }\n    } //submit the rating to the server\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Arvostele kurssi:\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"1-rating\",\n        className: \"fa fa-star\",\n        onClick: function onClick() {\n          return _this2.handleOptionChange(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"2-rating\",\n        className: \"fa fa-star\",\n        onClick: function onClick() {\n          return _this2.handleOptionChange(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"3-rating\",\n        className: \"fa fa-star\",\n        onClick: function onClick() {\n          return _this2.handleOptionChange(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"4-rating\",\n        className: \"fa fa-star\",\n        onClick: function onClick() {\n          return _this2.handleOptionChange(4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"5-rating\",\n        className: \"fa fa-star\",\n        onClick: function onClick() {\n          return _this2.handleOptionChange(5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        value: \"l\\xE4het\\xE4\",\n        variant: \"outlined\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Arvostele\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.infoMessage));\n    }\n  }]);\n\n  return Rating;\n}(Component);\n\nexport default withStyles(styles)(Rating);","map":{"version":3,"sources":["/home/joonas/LUT/programming/CodeCamp/TeamJJ/src/components/rating.jsx"],"names":["React","Component","axios","Button","withStyles","styles","theme","button","margin","spacing","unit","color","Rating","props","handleSubmit","e","preventDefault","state","selectedRating","console","log","setState","infoMessage","data","rating","toString","post","courseId","then","updateFunction","clearRating","i","element","document","getElementById","classList","remove","handleOptionChange","add","prevProps","prevState","classes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    color: \"#2196f3\"\n  }\n});\n\nclass Rating extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRating: \"\",\n      infoMessage: \"\"\n    };\n  }\n\n  //if the user navigates to a new course, clear the previous rating\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.courseId !== prevProps.courseId) {\n      this.clearRating();\n    }\n  }\n\n  //submit the rating to the server\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.selectedRating === \"\") {\n      console.log(\"ei arviointia\");\n      this.setState({\n        infoMessage: \"Valitse kurssille arvio asteikolla 1-5.\"\n      });\n      return;\n    }\n    console.log(\"annettu arviointi: \" + this.state.selectedRating);\n\n    //construct a json object which will be sent to the server\n    let data = {\n      rating: this.state.selectedRating.toString()\n    };\n\n    axios\n      .post(\"/api/course/\" + this.props.courseId + \"/rating\", data)\n      .then(() => {\n        this.setState({\n          infoMessage: \"Arvostelu tallennettu.\"\n        });\n        this.props.updateFunction();\n      });\n  };\n\n  //clears the css classes so the stars appear black\n  clearRating = () => {\n    for (let i = 1; i <= 5; i++) {\n      let element = document.getElementById(i + \"-rating\");\n      element.classList.remove(\"checked\");\n    }\n    this.setState({\n      selectedRating: \"\"\n    });\n  };\n\n  //updates the rating starts via css classes, and updates react state with correct rating value\n  handleOptionChange = rating => {\n    //when user gives a rating, make the stars orange up to the rated value\n    for (let i = rating; i >= 1; i--) {\n      let element = document.getElementById(i + \"-rating\");\n      element.classList.add(\"checked\");\n    }\n    //and if there was orange stars beyond the given rate, make them black again\n    for (let i = rating + 1; i <= 5; i++) {\n      let element = document.getElementById(i + \"-rating\");\n      element.classList.remove(\"checked\");\n    }\n    //update the state so we can send the given rate to api when user wants to\n    this.setState({\n      selectedRating: rating\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <p>Arvostele kurssi:</p>\n        <form onSubmit={this.handleSubmit}>\n          <span\n            id=\"1-rating\"\n            className=\"fa fa-star\"\n            onClick={() => this.handleOptionChange(1)}\n          />\n          <span\n            id=\"2-rating\"\n            className=\"fa fa-star\"\n            onClick={() => this.handleOptionChange(2)}\n          />\n          <span\n            id=\"3-rating\"\n            className=\"fa fa-star\"\n            onClick={() => this.handleOptionChange(3)}\n          />\n          <span\n            id=\"4-rating\"\n            className=\"fa fa-star\"\n            onClick={() => this.handleOptionChange(4)}\n          />\n          <span\n            id=\"5-rating\"\n            className=\"fa fa-star\"\n            onClick={() => this.handleOptionChange(5)}\n          />\n          <Button\n            type=\"submit\"\n            value=\"lähetä\"\n            variant=\"outlined\"\n            className={classes.button}\n          >\n            Arvostele\n          </Button>\n        </form>\n        <p>{this.state.infoMessage}</p>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Rating);\n"]},"metadata":{},"sourceType":"module"}