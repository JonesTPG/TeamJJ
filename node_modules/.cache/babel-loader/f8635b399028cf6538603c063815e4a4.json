{"ast":null,"code":"import _classCallCheck from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/joonas/LUT/programming/CodeCamp/TeamJJ/src/components/courses.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nvar Courses =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Courses, _Component);\n\n  function Courses(props) {\n    var _this;\n\n    _classCallCheck(this, Courses);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Courses).call(this, props));\n\n    _this.getDataFromDb = function () {\n      axios.get(\"/api/all\").then(function (response) {\n        var data = JSON.parse(response.data);\n\n        _this.setState({\n          courses: data\n        });\n      });\n    };\n\n    _this.state = {\n      courses: null,\n      filter: \"\",\n      selectedCourse: null,\n      course_id: null //stores the currently selected course id\n\n    };\n    _this.setFilter = _this.setFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setSelectedCourse = _this.setSelectedCourse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // fetch data from mlab database, add to courses\n\n\n  _createClass(Courses, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n    }\n  }, {\n    key: \"setSelectedCourse\",\n    value: function setSelectedCourse(course) {\n      this.setState({\n        course_id: course\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n\n      if (this.state.courses === null) {\n        return \"loading\";\n      }\n\n      var filtered = this.state.courses.filter(function (course) {\n        return course.coursename.toLowerCase().indexOf(_this2.state.filter.toLowerCase()) !== -1;\n      });\n      return React.createElement(\"div\", {\n        className: \"some-page-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, filtered.slice(0, 12).map(function (course) {\n        return React.createElement(\"div\", {\n          className: \"listElement\",\n          key: course._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/course\",\n            search: \"?id=\" + course._id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: \"listItem\",\n          onClick: function onClick() {\n            return _this2.setSelectedCourse(course._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, course.courseid, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), course.coursename, React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Comments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(ArrowForwardIos, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }))))), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      }))))));\n    }\n  }]);\n\n  return Courses;\n}(Component);\n\nCourses.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Courses);","map":{"version":3,"sources":["/home/joonas/LUT/programming/CodeCamp/TeamJJ/src/components/courses.jsx"],"names":["React","Component","Link","AppBar","Toolbar","List","PropTypes","withStyles","ListItem","Divider","SearchIcon","InputBase","fade","ListItemSecondaryAction","IconButton","ArrowForwardIos","axios","Courses","props","getDataFromDb","get","then","response","data","JSON","parse","setState","courses","state","filter","selectedCourse","course_id","setFilter","bind","setSelectedCourse","course","classes","filtered","coursename","toLowerCase","indexOf","root","slice","map","_id","pathname","search","courseid","propTypes","object","isRequired","styles"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courses: null,\n      filter: \"\",\n      selectedCourse: null,\n      course_id: null //stores the currently selected course id\n    };\n    this.setFilter = this.setFilter.bind(this);\n    this.setSelectedCourse = this.setSelectedCourse.bind(this);\n  }\n\n  // fetch data from mlab database, add to courses\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  getDataFromDb = () => {\n    axios.get(\"/api/all\").then(response => {\n      let data = JSON.parse(response.data);\n      this.setState({\n        courses: data\n      });\n    });\n  };\n\n  \n  setSelectedCourse(course) {\n    this.setState({ course_id: course });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.state.courses === null) {\n      return \"loading\";\n    }\n\n    const filtered = this.state.courses.filter(\n      course =>\n        course.coursename\n          .toLowerCase()\n          .indexOf(this.state.filter.toLowerCase()) !== -1\n    );\n\n    return (\n      <div className=\"some-page-wrapper\">\n        <React.Fragment>\n         \n\n          <div className=\"row\">\n            <div className=\"column\">\n              <List className={classes.root}>\n                {filtered.slice(0, 12).map(course => (\n                  <div className=\"listElement\" key={course._id}>\n                    <Link\n                      to={{\n                        pathname: \"/course\",\n                        search: \"?id=\" + course._id\n                      }}\n                    >\n                      <ListItem\n                        className=\"listItem\"\n                        onClick={() => this.setSelectedCourse(course._id)}\n                      >\n                        {course.courseid}\n                        <br />\n                        {course.coursename}\n                        <ListItemSecondaryAction>\n                          <IconButton aria-label=\"Comments\">\n                            <ArrowForwardIos />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    </Link>\n                    <Divider />\n                  </div>\n                ))}\n              </List>\n            </div>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\nCourses.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Courses);\n"]},"metadata":{},"sourceType":"module"}